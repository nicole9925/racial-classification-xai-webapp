{"version":3,"sources":["components/Header.js","components/UploadService.js","components/Upload.js","components/ImageComponent.js","App.js","index.js"],"names":["Header","props","className","title","img","name","data","FormData","parts","split","append","fetch","method","body","response","json","resp_data","UploadComponent","withIcon","singleImage","label","buttonText","onChange","onImage","imgExtension","withPreview","fileContainerStyle","backgroundColor","color","buttonStyles","Upload","useState","progress","setProgress","undefined","url","errorMessage","setErrorMessage","setImage","disableButton","setDisabled","failedImages","successImages","a","error","message","submit","UploadService","UploadToServer","resp","mode","headers","onClick","disabled","override","css","loading","size","content","ImageComponent","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff93ea87.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\n\nconst Header = (props) => {\n    return (\n        <div className=\"header-container\">\n            <div className=\"title-container\">\n                <h3 className=\"title-text\">{props.title}</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","class UploadService {\n  async UploadToServer(img, name) {\n\n    const data = new FormData();\n\n    const parts = img[0].split(';')\n\n    data.append('file', parts[2].split(\",\")[1]);\n    data.append('filename', name);\n    \n    let response = await fetch('/', {\n      method: 'POST',\n      body: data\n    })\n    let resp_data = await response.json()\n    return resp_data\n\n\n\n  }\n \n  // getImages() {\n  //   return http.get(\"/img\");\n  // }\n}\n\nexport default new UploadService();","import React, {useState} from 'react'\nimport ImageUploader from 'react-images-upload'\nimport UploadService from './UploadService'\nimport CircleLoader from 'react-spinners/CircleLoader'\nimport { css } from \"@emotion/core\";\nconst UploadComponent = props => (\n    <form>\n        <ImageUploader\n            key='image-uploader'\n            withIcon={false}\n            singleImage={true}\n            label=\"Please upload an image with a single face.\"\n            buttonText=\"Choose file\"\n            onChange={props.onImage}\n            imgExtension={['.jpg', '.png', '.jpeg']}\n            withPreview={true}\n            fileContainerStyle={{backgroundColor: '#2A323F', color: '#ffffff'}}\n            buttonStyles = {{backgroundColor: '#4C6074'}}\n        />\n    </form>\n);\nconst Upload = () => {\n    \n    const [progress, setProgress] = useState('getUpload');\n    const [url, setImageUrl] = useState(undefined);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [img, setImage] = useState(null);\n    const [disableButton, setDisabled] = useState(true);\n\n    const onImage = async (failedImages, successImages) => {\n        try {\n            setDisabled(false)\n            setImage(successImages)\n\n        } catch(error) {\n            setErrorMessage(error.message);\n\n        } \n    }\n\n    const loading = () => {\n        const override = css`\n        display: block;\n        margin-left: 0px;\n        `;\n        \n        return(\n            <CircleLoader \n            color={'#8230E9'}\n            loading={true}\n            size={150}\n            css={override}\n            />\n        )\n    }\n\n    const submit = async () => {\n        setProgress(\"Uploading\");\n        const parts = img[0].split(';');\n        const name = parts[1].split('=')[1];\n\n        const resp = await UploadService.UploadToServer(img, name)\n\n        // setImageUrl(resp[\"gen_path\"])\n        // setImageUrl(process.env.PUBLIC_URL + `/${resp.gen_path}`)\n        let img_url = await fetch(`/api/display/${resp.name}`, {\n            mode: 'no-cors',\n            method: \"get\",\n            headers: {\n                 \"Content-Type\": \"application/json\"\n            }\n        })\n        // setImageUrl(img_url.url)\n        // console.log(img_url)\n        // setProgress(\"Uploaded\")\n\n        // .then(async () => {\n        //     setImageUrl(\"done\");\n        // })\n        // .catch((err) => {\n        //     console.log(err)\n        // }) \n    }\n \n    const content = () => {\n        switch(progress) {\n            case 'getUpload':\n                fetch('/api/clear/')\n                return <>\n                <div className=\"upload-container\">\n                    <UploadComponent onImage={onImage} url={url} />\n                    <button className=\"submit\" onClick={submit} disabled={disableButton}>Submit</button>\n                </div>\n                </>\n                \n            case 'Uploading':\n                return loading()\n            case 'Uploaded':\n                return (\n                <>\n                    {/* <img src={url} alt=\"Your Image\"></img> */}\n                </>\n                )\n            case 'uploadError':\n                return (\n                    <>\n                        <div className=\"error-message\">{errorMessage}</div>\n                        <div className=\"upload-container\">\n                            <UploadComponent onImage={onImage} url={url} />\n                            <button className=\"submit\" onClick={submit}>Submit</button>\n                        </div>\n                    </>\n                )\n            default:\n                return <>\n                </>\n        }\n        \n    }\n\n    return (\n        <div>\n            {content()}\n        </div>\n    )\n}\n\nexport default Upload;","import React, {useState} from 'react'\nimport Upload from './Upload'\nimport './ImageComponent.css'\n\nconst ImageComponent = (props) => {\n    const [progress, setProgress] = useState('idle')\n\n    const content = () => {\n        switch(progress) {\n            case 'idle':\n                return (\n                    <>\n                    <div className=\"upload-container\">\n                        <Upload></Upload>\n                    </div>\n                    </>\n                )\n            case 'loading':\n                return ( <>\n                </>\n                )\n            case 'display':\n                return (\n                    // showImage()\n                    <div>Image</div>\n                )\n            default:\n                return (\n                    <>\n                    <div className=\"upload-container\">\n                        <Upload></Upload>\n                    </div>\n                    </>\n                )\n        }\n    }\n    return (\n        <>\n            <div>\n                {content()}\n            </div>\n        </>\n    )\n}\n\nexport default ImageComponent;","import './App.css';\nimport Header from './components/Header'\nimport ImageComponent from './components/ImageComponent'\n\nfunction Home() {\n  return (\n    <>\n    <header>\n      <Header className=\"header\" title=\"Facial Recognition + Bias Visualization\"></Header>\n    </header>\n    <h2 className=\"page-title\">Background</h2>\n    <div className=\"main-container\">\n      <div className=\"text-container\">\n        <div className=\"info-widget box\">\n          </div>\n          <div className=\"stats-container\">\n            <div className=\"stats-widget1 box\">\n\n            </div>\n            <div className=\"stats-widget2 box\">\n              </div>\n          </div>\n      </div>\n      <div className=\"image-upload-widget box\">\n          <ImageComponent className=\"image-upload\"></ImageComponent>\n      </div>\n    </div>\n    <footer>\n      \n    </footer>\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}