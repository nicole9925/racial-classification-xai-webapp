{"version":3,"sources":["components/Header.js","components/UploadService.js","components/Upload.js","components/ImageComponent.js","App.js","index.js"],"names":["Header","props","className","title","img","type","imgData","FormData","parts","split","append","axios","then","res","console","log","error","UploadComponent","withIcon","singleImage","label","buttonText","onChange","onImage","imgExtension","maxFileSize","withPreview","fileContainerStyle","backgroundColor","color","buttonStyles","Upload","useState","progress","setProgress","undefined","url","setImageUrl","errorMessage","setErrorMessage","failedImages","successImages","a","name","UploadService","upload","catch","err","message","content","ImageComponent","override","css","submit","onClick","setTimeout","loading","size","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3273f20b.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\n\nconst Header = (props) => {\n    return (\n        <div className=\"header-container\">\n            <div className=\"title-container\">\n                <h3 className=\"title-text\">{props.title}</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import axios from \"axios\";\n\nclass UploadService {\n  async upload(img, type) {\n    let imgData = new FormData();\n\n    const parts = img[0].split(';');\n    const name = parts[1].split('=')[1];\n\n    imgData.append(\"img\", img);\n    axios('/api/', imgData).then((res) => {\n        console.log(res)\n        return res\n    }, (error) => {\n      console.log(error)\n    })\n  }\n\n  // getImages() {\n  //   return http.get(\"/img\");\n  // }\n}\n\nexport default new UploadService();","import React, {useState} from 'react'\nimport ImageUploader from 'react-images-upload'\nimport UploadService from './UploadService'\n\nconst UploadComponent = props => (\n    <form>\n        <ImageUploader\n            key='image-uploader'\n            withIcon={false}\n            singleImage={true}\n            label=\"Maximum size file: 5MB\"\n            buttonText=\"Choose file\"\n            onChange={props.onImage}\n            imgExtension={['.jpg', '.png', '.jpeg']}\n            maxFileSize={104856}\n            withPreview={true}\n            fileContainerStyle={{backgroundColor: '#2A323F', color: '#ffffff'}}\n            buttonStyles = {{backgroundColor: '#4C6074'}}\n        />\n    </form>\n);\nconst Upload = () => {\n    \n    const [progress, setProgress] = useState('getUpload');\n    const [url, setImageUrl] = useState(undefined)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const onImage = async (failedImages, successImages) => {\n        setProgress('Uploading')\n        try {\n            const parts = successImages[0].split(';');\n            const name = parts[1].split('=')[1];\n            const type = parts[0].split(':')[1]\n\n            UploadService.upload(successImages, type)\n            .then(async () => {\n                setImageUrl(`http://localhost:3000/${name}`);\n                setProgress('Uploaded')\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n        } catch(error) {\n            setErrorMessage(error.message);\n            console.log(failedImages)\n\n        } setProgress('getUpload')\n    }\n\n    const content = () => {\n        switch(progress) {\n            case 'getUpload':\n                return <UploadComponent onImage={onImage} url={url} />\n            case 'Uploading':\n                return <div>Uploading...</div>\n            case 'Uploaded':\n                return (\n                <>\n                    <UploadComponent onImage={onImage} url={url}/>\n                </>\n                )\n            case 'uploadError':\n                return (\n                    <>\n                        <div>Error message = {errorMessage}</div>\n                        <UploadComponent onImage={onImage} url={url} />\n                    </>\n                )\n            default:\n                return <UploadComponent onImage={onImage} url={url} />\n        }\n        \n    }\n\n    return (\n        <div>\n            {content()}\n        </div>\n    )\n}\n\nexport default Upload;","import React, {useState} from 'react'\nimport Upload from './Upload'\nimport { css } from \"@emotion/core\";\nimport './ImageComponent.css'\nimport CircleLoader from 'react-spinners/CircleLoader'\n\nconst ImageComponent = (props) => {\n    const [progress, setProgress] = useState('idle')\n\n    const override = css`\n    display: block;\n    margin-left: 0px;\n    `;\n\n    const loading = () => {\n        setTimeout(() => {\n            setProgress('display')\n        }, 5000)\n        \n        return(\n            <CircleLoader \n            color={'#8230E9'}\n            loading={true}\n            size={150}\n            css={override}\n            />\n        )\n    }\n\n    const submit = async () => {       \n        setProgress('loading')\n    }\n\n    const content = () => {\n        switch(progress) {\n            case 'idle':\n                return (\n                    <>\n                    <div className=\"upload-container\">\n                        <Upload></Upload>\n                        <button className=\"submit\" onClick={submit}>Submit</button>\n                    </div>\n                    </>\n                )\n            case 'loading':\n                return (\n                    loading()\n                )\n            case 'display':\n                return (\n                    // showImage()\n                    <div>Image</div>\n                )\n            default:\n                return (\n                    <>\n                    <div className=\"upload-container\">\n                        <Upload></Upload>\n                        <button className=\"submit\" onClick={submit}>Submit</button>\n                    </div>\n                    </>\n                )\n        }\n    }\n    return (\n        <>\n            <div>\n                {content()}\n            </div>\n        </>\n    )\n}\n\nexport default ImageComponent;","import './App.css';\nimport Header from './components/Header'\nimport ImageComponent from './components/ImageComponent'\n\nfunction Home() {\n  return (\n    <>\n    <header>\n      <Header className=\"header\" title=\"Facial Recognition + Bias Visualization\"></Header>\n    </header>\n    <h2 className=\"page-title\">Background</h2>\n    <div className=\"main-container\">\n      <div className=\"text-container\">\n        <div className=\"info-widget box\">\n          </div>\n          <div className=\"stats-container\">\n            <div className=\"stats-widget1 box\">\n\n            </div>\n            <div className=\"stats-widget2 box\">\n              </div>\n          </div>\n      </div>\n      <div className=\"image-upload-widget box\">\n          <ImageComponent className=\"image-upload\"></ImageComponent>\n      </div>\n    </div>\n    <footer>\n      \n    </footer>\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}